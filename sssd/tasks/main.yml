---

- name: Install SSSD packages
  package:
    name: "{{ sssd_pkgs }}"
    state: present
    update_cache: yes
  delay: 10
  register: result
  retries: 3
  until: result is succeeded

- name: Manage Kerberos configuration
  ansible.builtin.template:
    src: "krb5.conf.j2"
    dest: "/etc/krb5.conf"
    mode: "0644"
    owner: root
    group: root

- name: Manage SSSD configuration
  ansible.builtin.template:
    src: "sssd.conf.j2"
    dest: "/etc/sssd/sssd.conf"
    mode: "0600"
    owner: root
    group: root

- name: Create smaller name for Windows NETBIOS compatibility
  shell: "echo {{ ansible_facts['hostname'] }} | awk -F '[--]' '{print $2$3}'"
  become: false
  delegate_to: 127.0.0.1
  register: smaller_name

- name: Check if machine already in domain
  ansible.builtin.command: "adcli testjoin -D {{ sssd_ad_domain }}"
  register: domain_result
  ignore_errors: true

- name: Join domain with adcli
  ansible.builtin.command: "adcli join -U {{ sssd_ad_user }} --stdin-password -D {{ sssd_ad_domain }} -N {{ smaller_name.stdout }} -H {{ ansible_facts['hostname'] }} --os-name={{ ansible_facts['distribution'] }} --os-version={{ ansible_facts['distribution_major_version'] }}"
  args:
    stdin: "{{ sssd_ad_password }}"
  notify:
    - restart sssd
  when: not domain_result.rc == 0
  register: join

- name: Enable sssd
  ansible.builtin.service:
    name: sssd
    state: started
    enabled: true

- name: Enable automatic home directory creation
  ansible.builtin.command: "pam-auth-update --enable mkhomedir"
  when: join.changed

- name: Define AuthorizedKeysCommand to work with SSSD
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^(.*)AuthorizedKeysCommand '
    line: 'AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys'

- name: Define AuthorizedKeysCommandUser to work with SSSD
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^(.*)AuthorizedKeysCommandUser '
    line: 'AuthorizedKeysCommandUser nobody'
  notify:
    - restart ssh

- name: sudo | Add admin group to sudo
  ansible.builtin.template:
    src: sudoers.j2
    dest: "{{ sssd_ad_sudo_conf_d }}/sssd_ad"
    validate: 'visudo -cf %s'
    owner: root
    group: root
    mode: "0440"